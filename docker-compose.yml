version: "3.7"

services:

  zookeeper:
      image: bitnami/zookeeper:latest
      ports:
          - 2181:2181
      environment:
          - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
      image: bitnami/kafka:latest
      ports:
          - 9092:9092
          - 9093:9093
          - 29092:29092
      environment:
          - KAFKA_BROKER_ID=1
          - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
          - ALLOW_PLAINTEXT_LISTENER=yes
          - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
          - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
          - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      depends_on:
          - zookeeper

  # kafka-ui:
  #   image: provectuslabs/kafka-ui:latest
  #   container_name: kafka-ui
  #   ports:
  #     - 8090:8080
  #   restart: always
  #   environment:
  #     - KAFKA_CLUSTERS_0_NAME=local
  #     - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
  #     - DYNAMIC_CONFIG_ENABLED=true

  # akhq-kafka-ui:
  #   image: tchiotludo/akhq
  #   restart: unless-stopped
  #   environment:
  #     AKHQ_CONFIGURATION: |
  #       akhq:
  #         connections:
  #           docker-kafka-server:
  #             properties:
  #               bootstrap.servers: "kafka:9092"
  #             schema-registry:
  #               url: "http://schema-registry:8085"
  #             connect:
  #               - name: "connect"
  #                 url: "http://connect:8083"
  #   ports:
  #     - 8080:8080

  # kafdrop-kafka-ui:
  #   image: obsidiandynamics/kafdrop
  #   restart: "no"
  #   ports:
  #     - "9000:9000"
  #   environment:
  #     KAFKA_BROKERCONNECT: "kafka:9092"
  #   depends_on:
  #     - "kafka"

  redpanda-kafka-ui:
    image: redpandadata/console:latest
    environment:
      KAFKA_BROKERS: "kafka:9092"
    ports:
      - "8080:8080"
